// <auto-generated />
using System;
using GeotekProject.Persistence.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GeotekProject.Persistence.Migrations
{
    [DbContext(typeof(GeotekProjectDbContext))]
    [Migration("20240926102740_mig_1")]
    partial class mig_1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GeotekProject.Domain.Entities.Bosaltma", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("BosaltmaDurumu")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("KamyonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Plaka")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("KamyonId");

                    b.ToTable("Bosaltmas");
                });

            modelBuilder.Entity("GeotekProject.Domain.Entities.Kamyon", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Hammadde")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Miktar")
                        .HasColumnType("int");

                    b.Property<string>("Plaka")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Kamyons");
                });

            modelBuilder.Entity("GeotekProject.Domain.Entities.Kantar", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("KamyonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("KamyonKg")
                        .HasColumnType("int");

                    b.Property<bool>("OnayDurum")
                        .HasColumnType("bit");

                    b.Property<string>("Plaka")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("KamyonId");

                    b.ToTable("Kantars");
                });

            modelBuilder.Entity("GeotekProject.Domain.Entities.Bosaltma", b =>
                {
                    b.HasOne("GeotekProject.Domain.Entities.Kamyon", "Kamyon")
                        .WithMany()
                        .HasForeignKey("KamyonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kamyon");
                });

            modelBuilder.Entity("GeotekProject.Domain.Entities.Kantar", b =>
                {
                    b.HasOne("GeotekProject.Domain.Entities.Kamyon", "Kamyon")
                        .WithMany()
                        .HasForeignKey("KamyonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kamyon");
                });
#pragma warning restore 612, 618
        }
    }
}
